{"version":3,"sources":["components/SocialButton.js","App.js","serviceWorker.js","index.js"],"names":["SocialButton","state","href","props","handleClick","e","preventDefault","window","open","className","onClick","this","size","icon","React","Component","App","style","position","zIndex","width","height","params","particles","number","value","density","enable","value_area","color","shape","type","opacity","random","anim","speed","size_min","line_linked","distance","move","direction","straight","out_mode","attract","rotateX","rotateY","retina_detect","alt","src","faTwitter","faGithub","faDiscord","faEnvelope","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gRAsBeA,E,4MAlBXC,MAAQ,CACJC,KAAM,EAAKC,MAAMD,M,EAGrBE,YAAc,SAACC,GACXA,EAAEC,iBACFC,OAAOC,KAAK,EAAKP,MAAMC,KAAM,W,uDAI7B,OACI,uBAAGO,UAAU,mBAAmBC,QAASC,KAAKP,YAAaF,KAAMS,KAAKR,MAAMD,MACxE,kBAAC,IAAD,CAAiBU,KAAK,KAAKH,UAAU,SAASI,KAAMF,KAAKR,MAAMU,Y,GAbpDC,IAAMC,WCsFlBC,MAjFf,WACI,OACI,yBAAKP,UAAU,OACX,yBAAKQ,MAAO,CAAEC,SAAU,QAASC,QAAS,IAAKC,MAAO,OAAQC,OAAQ,SAClE,kBAAC,IAAD,CACIC,OAAQ,CACJC,UAAW,CACPC,OAAQ,CACJC,MAAO,IACPC,QAAS,CACLC,QAAQ,EACRC,WAAY,OAGpBC,MAAO,CACHJ,MAAO,QAEXK,MAAO,CACHC,KAAM,YAEVC,QAAS,CACLP,MAAO,GACPQ,QAAQ,GAEZrB,KAAM,CACFa,MAAO,EACPQ,QAAQ,EACRC,KAAM,CACFP,QAAQ,EACRQ,MAAO,GACPC,SAAU,KAGlBC,YAAa,CACTV,QAAQ,EACRW,SAAU,IACVT,MAAO,UACPG,QAAS,GACTZ,MAAO,GAEXmB,KAAM,CACFZ,QAAQ,EACRQ,MAAO,EACPK,UAAW,SACXP,QAAQ,EACRQ,UAAU,EACVC,SAAU,MACVC,QAAS,CACLhB,QAAQ,EACRiB,QAAS,IACTC,QAAS,QAIrBC,eAAe,MAI3B,yBAAKrC,UAAU,oBACX,yBAAKA,UAAU,OACX,yBACIA,UAAU,MACVsC,IAAI,yBACJC,IAAI,4GAIZ,wBAAIvC,UAAU,QAAd,UACA,uBAAGA,UAAU,eAAb,mCAEA,yBAAKA,UAAU,WACX,kBAAC,EAAD,CAAcI,KAAMoC,IAAW/C,KAAK,oCACpC,kBAAC,EAAD,CAAcW,KAAMqC,IAAUhD,KAAK,gCACnC,kBAAC,EAAD,CAAcW,KAAMsC,IAAWjD,KAAK,sDACpC,kBAAC,EAAD,CAAcW,KAAMuC,IAAYlD,KAAK,wCCtErCmD,QACW,cAA7B9C,OAAO+C,SAASC,UAEe,UAA7BhD,OAAO+C,SAASC,UAEhBhD,OAAO+C,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.697d4c1f.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass SocialButton extends React.Component {\n    state = {\n        href: this.props.href,\n    };\n\n    handleClick = (e) => {\n        e.preventDefault();\n        window.open(this.state.href, '_blank');\n    };\n\n    render() {\n        return (\n            <a className=\"social-attribute\" onClick={this.handleClick} href={this.props.href}>\n                <FontAwesomeIcon size=\"2x\" className=\"social\" icon={this.props.icon} />\n            </a>\n        );\n    }\n}\n\nexport default SocialButton;\n","import React from 'react';\nimport Particles from 'react-particles-js';\nimport { faGithub, faTwitter, faDiscord } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\n\nimport './App.css';\nimport SocialButton from './components/SocialButton';\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <div style={{ position: 'fixed', zIndex: -999, width: '100%', height: '100%' }}>\n                <Particles\n                    params={{\n                        particles: {\n                            number: {\n                                value: 250,\n                                density: {\n                                    enable: true,\n                                    value_area: 5500,\n                                },\n                            },\n                            color: {\n                                value: '#fff',\n                            },\n                            shape: {\n                                type: 'triangle',\n                            },\n                            opacity: {\n                                value: 0.2,\n                                random: true,\n                            },\n                            size: {\n                                value: 6,\n                                random: true,\n                                anim: {\n                                    enable: false,\n                                    speed: 40,\n                                    size_min: 0.1,\n                                },\n                            },\n                            line_linked: {\n                                enable: false,\n                                distance: 500,\n                                color: '#ffffff',\n                                opacity: 0.4,\n                                width: 2,\n                            },\n                            move: {\n                                enable: true,\n                                speed: 3,\n                                direction: 'bottom',\n                                random: false,\n                                straight: false,\n                                out_mode: 'out',\n                                attract: {\n                                    enable: false,\n                                    rotateX: 600,\n                                    rotateY: 1200,\n                                },\n                            },\n                        },\n                        retina_detect: true,\n                    }}\n                />\n            </div>\n            <div className=\"column-container\">\n                <div className=\"pic\">\n                    <img\n                        className=\"pfp\"\n                        alt=\"GitHub Profile Picture\"\n                        src=\"https://avatars2.githubusercontent.com/u/38964599?s=400&u=f5a025125c876849fb5508646d1aa469937a02fd&v=4\"\n                    />\n                </div>\n\n                <h1 className=\"name\">normie</h1>\n                <a className=\"description\">Java, NodeJS, and C++ Developer</a>\n\n                <div className=\"socials\">\n                    <SocialButton icon={faTwitter} href=\"https://twitter.com/AscendenteA\" />\n                    <SocialButton icon={faGithub} href=\"https://github.com/coqui123\" />\n                    <SocialButton icon={faDiscord} href=\"https://discordhub.com/profile/167782318927249409\" />\n                    <SocialButton icon={faEnvelope} href=\"mailto:bigpapilobster@gmail.com\" />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}